package dev.zyrakia.productiveplants.client.config;

import dev.zyrakia.productiveplants.client.ProductivePlantsClient;
import me.shedaniel.autoconfig.ConfigData;
import me.shedaniel.autoconfig.annotation.Config;
import me.shedaniel.autoconfig.annotation.ConfigEntry;
import net.minecraft.particle.ParticleEffect;
import net.minecraft.particle.ParticleTypes;

import java.lang.reflect.Field;

/**
 * An automatic configuration class supported
 * and generated by {@link me.shedaniel.autoconfig.AutoConfig}.
 */
@Config.Gui.Background(Config.Gui.Background.TRANSPARENT)
@Config(name = ProductivePlantsClient.MOD_ID)
public class ProductivePlantsConfig implements ConfigData {

	/**
	 * Settings related to the crop maturity indication effect.
	 */
	@ConfigEntry.Gui.CollapsibleObject(startExpanded = true)
	public MaturityEffectSettings maturityEffect = new MaturityEffectSettings();

	/**
	 * Whether harvesting of immature crops is disabled.
	 */
	public boolean allowImmatureHarvest = false;

	/**
	 * Inner category related to the maturity indication effect.
	 */
	public static class MaturityEffectSettings {
		/**
		 * Whether the maturity effect is enabled.
		 */
		public boolean effectEnabled = true;

		/**
		 * The name of the effect that will be used. This is later
		 * cast into a Minecraft effect.
		 */
		private String effectName = "happy villager";

		/**
		 * Obtains the particle effect that is associated with the
		 * given name cast into a static {@link ParticleEffect} from the
		 * {@link ParticleTypes} class.
		 *
		 * @return the particle effect, or the default if the value was invalid
		 */
		public static ParticleEffect castNameToEffect(String name) {
			String key = name.trim().toUpperCase().replace(" ", "_");

			try {
				Field effectField = ParticleTypes.class.getField(key);
				Object effect = effectField.get(null);

				if (effect instanceof ParticleEffect) {
					return (ParticleEffect) effect;
				} else
					throw new NoSuchFieldException();
			} catch (NoSuchFieldException | IllegalAccessException e) {
				ProductivePlantsClient.LOGGER.warn("The effect \"{}\" is invalid. The default effect was selected.",
						name);
				return ParticleTypes.HAPPY_VILLAGER;
			}
		}

		/**
		 * Returns the currently configured effect name cast
		 * into a {@link ParticleEffect}.
		 *
		 * @return the currently configured particle effect
		 */
		public ParticleEffect getEffect() {
			return castNameToEffect(this.effectName);
		}
	}

}
